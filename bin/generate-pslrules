#!/bin/bash

set -o errexit -o nounset -o pipefail -o xtrace

# Get the script directory
SCRIPT_DIRECTORY=$( cd "$( dirname "${BASH_SOURCE:-$0}" )" && pwd )
ROOT_DIRECTORY=$(realpath $SCRIPT_DIRECTORY/../)

# Define the file paths and URLs
PSL_FILE="public_suffix_list.dat"
PSL_FILE_PATH=$ROOT_DIRECTORY/$PSL_FILE
PSL_RULES="pslrules.js"
PSL_RULES_PATH=$ROOT_DIRECTORY/$PSL_RULES
PSL_URL="https://publicsuffix.org/list/$PSL_FILE"

# Download the PSL file if it doesn't exist
if [ ! -f $PSL_FILE_PATH ]; then
    wget --directory-prefix $ROOT_DIRECTORY $PSL_URL || { echo "Error downloading $PSL_URL"; exit 1; }
fi

# Generate the JavaScript code using jq
cat << EOF > $PSL_RULES_PATH
const pslrules = (function(root) { //  eslint-disable-line no-unused-vars

    const EXCEPTION_ENTRIES = new Set([
$(cat $PSL_FILE_PATH | grep '^!' | sed -e 's/^!//' | awk '{print $1}' | tr -d '\n')
    ]);

    const WILDCARD_ENTRIES = new Set([
$(cat $PSL_FILE_PATH | grep '^*.' | sed -e 's/^\*\.//' | awk '{print $1}' | tr -d '\n')
    ]);

    const NORMAL_ENTRIES = new Set([
$(cat $PSL_FILE_PATH | grep -Ev '^//|^$|^!|^*.' | awk '{print $1}'
